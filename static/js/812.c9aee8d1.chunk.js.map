{"version":3,"file":"static/js/812.c9aee8d1.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/components/contact-list/ContactListStyle.module.css?f387","redux/contacts/selectors-contacts.js","redux/filter/selectors-filter.js","components/contact-list/ContactList.jsx","webpack://goit-react-hw-08-phonebook/./src/components/contact/contact.module.css?a575","components/contact/ContactForm.jsx","components/filter/Filter.jsx","webpack://goit-react-hw-08-phonebook/./src/pages/contacts/contacts.module.css?ba8f","pages/contacts/contactsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list__contact\":\"ContactListStyle_list__contact__6AolR\",\"items__contact\":\"ContactListStyle_items__contact__UggIp\",\"contact\":\"ContactListStyle_contact__U2Zre\",\"remove__btn\":\"ContactListStyle_remove__btn__pjUir\"};","\nexport const allContacts = state => state.contacts.contacts\nexport const getIsLoading = state => state.contacts.isLoading\nexport const getError = state => state.contacts.error\n","export const getFilter = state => state.filter\n\n","\n\nimport css from './ContactListStyle.module.css'\n\nimport { allContacts } from \"redux/contacts/selectors-contacts\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { removeNumber } from \"redux/contacts/operationsContacts\";\nimport { getFilter } from 'redux/filter/selectors-filter';\n\n\nexport const ContactList = ()=>{\n  \n const contactSecond =useSelector(allContacts)\n const dispatch = useDispatch()\n const searchContact = useSelector(getFilter)\n\n\n const removeContacts =(contactId)=>{\n\n  const action = removeNumber(contactId)\n      dispatch(action)\n    }\n\n\n  return(\n      <ul className={css.list__contact}>\n        {contactSecond.length > 0 ? (\n        contactSecond.filter(({name})=>\n        name.toLowerCase().includes(searchContact.toLowerCase())).map(({id, name, number}) =>\n          <li key={id}\n          className={css.items__contact}\n          >\n            <p className={css.contact}>{name}: {number}</p>\n            <button \n            className={css.remove__btn}\n            onClick={()=>{removeContacts(id)}}>Remove</button>\n          </li>\n        )): (<span style={{fontSize: \"30px\"}} >You don`t have contacts</span>)}\n      </ul>\n    \n  )\n}\n\n// ContactList.propTypes ={\n//   contactSecond: PropTypes.arrayOf(PropTypes.shape({\n//     name: PropTypes.string.isRequired,\n//     id: PropTypes.string.isRequired,\n//     number: PropTypes.string.isRequired,\n//   })),\n//   filter: PropTypes.string,\n//   onRemove: PropTypes.func,\n\n\n// }\n\n","// extracted by mini-css-extract-plugin\nexport default {\"form_contact\":\"contact_form_contact__Muvuc\",\"input__form\":\"contact_input__form__l7bUy\",\"submit__btn\":\"contact_submit__btn__zeGEr\"};","import React from 'react';\nimport { Formik, Field, Form } from 'formik';\n\nimport css from './contact.module.css'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { allContacts } from 'redux/contacts/selectors-contacts';\nimport { addNumber } from 'redux/contacts/operationsContacts';\n\n   \n\n\nexport const ContactForm = () => {\n\n  const contactsSecond = useSelector(allContacts)\n  const dispatch = useDispatch()\n\n  const initialValues ={ \n    name: '',\n    number: '',\n  }\n\n  const handleSubmit = ({name, number}, { resetForm }) => {\n\n\n    const checkContact = contactsSecond.map(contact => contact.name).includes(name)\n    if (checkContact) {\n      return alert(`${name} is alredy in contacts.`);\n    }\n    const action = addNumber({name, number})\n    dispatch(action)\n    resetForm();\n  };\n\n\n\n\n\n  return (  \n    \n    <Formik  \n    initialValues={initialValues}\n      onSubmit={handleSubmit}\n    >\n      <Form className={css.form_contact}>\n        <label>\n          \n        <Field  className={css.input__form} id=\"firstName\"  type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required \n          placeholder='Name'/>\n        </label>\n\n        <label>\n        <Field  className={css.input__form} id=\"lastName\"  type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required  \n          placeholder='Number'/>\n        </label>\n        <button className={css.submit__btn} type=\"submit\">S U B M I T</button>\n      </Form>\n    </Formik>\n  )\n}\n\n","\nimport React from 'react';\nimport css from '../contact/contact.module.css'\nimport { searchContacts } from \"redux/filter/filterSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getFilter } from 'redux/filter/selectors-filter';\n\n\n\nexport const Filter = ()=>{\n  const dispatch = useDispatch()\n  const searchContact = useSelector(getFilter)\n\n\n  const filterContacts = event =>{\n    console.log(event.target.value)\n    const filter = searchContacts(event.target.value)\n    dispatch(filter)\n  }\n \n  return(\n    <label>\n      <input \n      className={css.input__form}\n      type=\"text\"\n       name='filter'\n       value={searchContact} \n       onChange={filterContacts}/>\n    </label>\n  )\n  \n} \n","// extracted by mini-css-extract-plugin\nexport default {\"phonebook\":\"contacts_phonebook__FsJsd\"};","import { ContactList } from \"components/contact-list/ContactList\"\nimport { ContactForm } from \"components/contact/ContactForm\"\nimport { Filter } from \"components/filter/Filter\"\nimport css from './contacts.module.css'\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { getError, getIsLoading } from \"redux/contacts/selectors-contacts\"\nimport { useEffect } from \"react\"\nimport { getContacts } from \"redux/contacts/operationsContacts\"\n\n\n\n const Contact = () => {\n    const dispatch = useDispatch()\n    \n    useEffect(()=>{\n        dispatch(getContacts())\n    }, [dispatch])\n\n    const isLoading = useSelector(getIsLoading);\n    const error = useSelector(getError);\n\n    \n    return <div className={css.phonebook}>\n    <h1>Phonebook</h1>\n    <ContactForm/>\n    <h2>Contacts</h2>\n    <Filter/>\n    {isLoading && !error && <b>Request in progress...</b>}\n\n    <ContactList/>\n    </div>\n}\nexport default Contact"],"names":["allContacts","state","contacts","getIsLoading","isLoading","getError","error","getFilter","filter","ContactList","contactSecond","useSelector","dispatch","useDispatch","searchContact","className","css","length","name","toLowerCase","includes","map","id","number","onClick","contactId","action","removeNumber","removeContacts","style","fontSize","ContactForm","contactsSecond","initialValues","onSubmit","resetForm","contact","alert","addNumber","type","pattern","title","required","placeholder","Filter","value","onChange","event","console","log","target","searchContacts","useEffect","getContacts"],"sourceRoot":""}